PROJECT(sigar C)

cmake_minimum_required(VERSION 2.6)

INCLUDE(CheckIncludeFiles)
INCLUDE(CheckFunctionExists)
INCLUDE(CheckTypeSize)
INCLUDE(CTest)
INCLUDE(InstallRequiredSystemLibraries)

ENABLE_TESTING()

FILE(STRINGS ${PROJECT_SOURCE_DIR}/version.properties PROJECT_PROPERTIES)
LIST(LENGTH PROJECT_PROPERTIES PROJECT_PROPERTIES_LENGTH)
FOREACH(PROJECT_PROPERTY IN LISTS PROJECT_PROPERTIES)
	IF(NOT PROJECT_PROPERTY STREQUAL "")
		STRING(REPLACE "=" ";" PROJECT_PROPERTY_PARTS ${PROJECT_PROPERTY})
		LIST(GET PROJECT_PROPERTY_PARTS 0 PROP_KEY)
		LIST(GET PROJECT_PROPERTY_PARTS 1 PROP_VALUE)
		IF(PROP_KEY STREQUAL "version.major")
			SET(SIGAR_VERSION_MAJOR ${PROP_VALUE})
		ENDIF()
		IF(PROP_KEY STREQUAL "version.minor")
			SET(SIGAR_VERSION_MINOR ${PROP_VALUE})
		ENDIF()
		IF(PROP_KEY STREQUAL "version.maint")
			SET(SIGAR_VERSION_PATCH ${PROP_VALUE})
		ENDIF()
		LIST(LENGTH PROJECT_PROPERTY_PARTS PROJECT_PROPERTY_PARTS_LENGTH)
	ENDIF()
ENDFOREACH()

SET(CPACK_PACKAGE_VERSION_MAJOR ${SIGAR_VERSION_MAJOR})
SET(CPACK_PACKAGE_VERSION_MINOR ${SIGAR_VERSION_MINOR})
SET(CPACK_PACKAGE_VERSION_PATCH ${SIGAR_VERSION_PATCH})
SET(CPACK_PACKAGE_VENDOR "Hyperic")
## SET(CPACK_*) before the INCLUDE(CPack)
INCLUDE(CPack)

IF(WIN32)
	## make sure we only use the smallest set of
	## headers on win32. Otherwise we get clashes
	## between winsock2.h and winsock.h
	ADD_DEFINITIONS(-DWIN32_LEAN_AND_MEAN)

	# force the correct version for the redist manifest
	ADD_DEFINITIONS(-D_BIND_TO_CURRENT_MFC_VERSION=1 -D_BIND_TO_CURRENT_CRT_VERSION=1)
	# turn off security warnings for system calls
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
ENDIF(WIN32)

ADD_SUBDIRECTORY(src build-src)
ADD_SUBDIRECTORY(tests build-tests)
ADD_SUBDIRECTORY(include build-include)
